import React, { useState } from 'react';
import api from '../api/axiosInstance';  // Assuming this is your Axios instance
import { toast } from 'react-toastify';
import { useNavigate } from 'react-router-dom';
import './Staff.css';  // Add custom styles if needed

const Staff: React.FC = () => {
  const navigate = useNavigate();

  // State variables for form fields
  const [staffName, setStaffName] = useState('');
  const [email, setEmail] = useState('');
  const [contact, setContact] = useState('');
  const [gender, setGender] = useState('Male');
  const [loading, setLoading] = useState(false);  // Loading state for the button

  // Function to handle adding staff
  const handleAddStaff = async (e: React.FormEvent) => {
    e.preventDefault();  // Prevent default form submission

    const token = localStorage.getItem('token');
    if (!token) {
      toast.error('Please log in to add staff.');
      navigate('/login');
      return;
    }

    const staffData = {
      staffName,
      email,
      contact,
      gender,
    };

    try {
      setLoading(true);  // Show loading indicator
      const response = await api.post('/add-Staff', staffData, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (response.data.success) {
        toast.success('Staff added successfully');
        // Optionally reset the form or navigate to another page after adding staff
        setStaffName('');
        setEmail('');
        setContact('');
        setGender('Male');
      } else {
        toast.error(response.data.message || 'Failed to add staff');
      }
    } catch (err: any) {
      toast.error(`Error: ${err.response?.data?.message || err.message}`);
    } finally {
      setLoading(false);  // Hide loading indicator
    }
  };

  return (
    <div className="staff-form-container">
      <h3>Add Staff</h3>
      <form onSubmit={handleAddStaff}>
        <div className="form-group">
          <label htmlFor="staffName">Staff Name</label>
          <input
            type="text"
            id="staffName"
            className="form-control"
            value={staffName}
            onChange={(e) => setStaffName(e.target.value)}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="email">Email</label>
          <input
            type="email"
            id="email"
            className="form-control"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="contact">Contact</label>
          <input
            type="text"
            id="contact"
            className="form-control"
            value={contact}
            onChange={(e) => setContact(e.target.value)}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="gender">Gender</label>
          <select
            id="gender"
            className="form-control"
            value={gender}
            onChange={(e) => setGender(e.target.value)}
            required
          >
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
          </select>
        </div>

        <button
          type="submit"
          className="btn btn-primary"
          disabled={loading} // Disable button during loading
        >
          {loading ? 'Adding Staff...' : 'Add Staff'}
        </button>
      </form>
    </div>
  );
};

export default Staff;
